{"version":3,"sources":["components/Feedback/FeedbackOptons.styled.jsx","components/Feedback/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Button","styled","button","props","eventOption","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","label","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEaA,E,KAASC,EAAOC,OAAV,qOAMK,SAAAC,GAClB,OAAQA,EAAMC,aACZ,IAAK,OACH,MAAO,QACT,IAAK,UACH,MAAO,SACT,IAAK,MACH,MAAO,MACT,QACE,MAAO,W,OCdXC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACT,EAAD,CACEU,KAAK,SAELC,QAAS,kBAAMJ,EAAgBE,IAC/BL,YAAaK,EAJf,SAMGA,GAJIA,SCPTG,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCPAC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACGD,GAAS,6BAAKA,IACdC,MCJDC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCGPC,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBW,gCAAkC,WAGhC,OADEC,KAAKC,MAAyB,IAAlB,EAAKJ,MAAMX,KAAc,EAAKY,uBAAyB,G,EAIvElB,gBAAkB,SAAAsB,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAQE,EAAUF,GAAS,O,4CAIzC,WACE,MAA+BG,KAAKR,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiByB,KAAKzB,oBAI1B,cAAC,EAAD,CAASY,MAAM,aAAf,SACGa,KAAKP,qBACJ,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKP,qBACZR,mBAAoBe,KAAKN,oCAG3B,cAAC,EAAD,CAAcJ,QAAQ,kC,GA/ChBW,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6100959.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  background-color: tomato;\n  border: 2px solid black;\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => {\n      switch (props.eventOption) {\n        case 'good':\n          return 'green';\n        case 'neutral':\n          return 'yellow';\n        case 'bad':\n          return 'red';\n        default:\n          return '#000';\n      }\n    }};\n  }\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button } from './FeedbackOptons.styled';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map(option => (\n        <Button\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n          eventOption={option}\n        >\n          {option}\n        </Button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport { FeedbackOptions };\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport { Statistics };\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport { Section };\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport { Notification };\n","import { Component } from 'react';\nimport { FeedbackOptions } from './components/Feedback/FeedbackOptions';\nimport { Statistics } from './components/Statistics/Statistics';\nimport { Section } from './components/Section/Section';\nimport { Notification } from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage =\n      Math.round((this.state.good * 100) / this.countTotalFeedback()) || 0;\n    return positiveFeedbackPercentage;\n  };\n\n  onLeaveFeedback = label => {\n    this.setState(prevState => {\n      return { [label]: prevState[label] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}