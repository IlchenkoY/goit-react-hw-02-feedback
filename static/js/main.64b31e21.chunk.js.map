{"version":3,"sources":["components/Feedback/FeedbackOptions.jsx","components/Feedback/Statistics.jsx","components/Feedback/Section.jsx","components/Feedback/Notification.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","label","setState","prevState","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQACMA,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAAQC,KAAK,SAELC,QAAS,kBAAMJ,EAAgBE,IAFvC,SAGEA,GAFWA,SCNvBG,EAAc,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC9C,OACI,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCPNC,EAAU,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrB,OACI,oCACI,6BAAKD,IACJC,MCJPC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACC,4BAAIA,KCKHC,E,4MAEJC,MAAQ,CACJX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTU,mBAAqB,WAEnB,OADsBC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAItFC,gCAAkC,WAEhC,OADmCC,KAAKC,MAAwB,IAAlB,EAAKT,MAAMX,KAAa,EAAKY,uBAAyB,G,EAItGlB,gBAAkB,SAAA2B,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAEF,EAAQE,EAAUF,GAAS,O,4CAIxC,WACE,MAA+BG,KAAKb,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACA,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACI,cAAC,EAAD,CACEb,QAASoB,OAAOY,KAAKD,KAAKb,OAC1BjB,gBAAiB8B,KAAK9B,oBAI1B,cAAC,EAAD,CAASY,MAAM,aAAf,SACGkB,KAAKZ,qBACD,cAAC,EAAD,CACCZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKZ,qBACdR,mBAAoBoB,KAAKN,oCAExB,cAAC,EAAD,CAAcT,QAAQ,kC,GA7CnBiB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64b31e21.chunk.js","sourcesContent":["        \r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {options.map(option => (\r\n                <button type=\"button\"\r\n                        key={option}\r\n                        onClick={() => onLeaveFeedback(option)}\r\n                >{option}</button>\r\n            ))}\r\n    </>    \r\n    ) \r\n};\r\n\r\nexport { FeedbackOptions };","const Statistics  = ({ good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n    </>    \r\n    ) \r\n};\r\n\r\nexport { Statistics };","const Section = ({title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    ) \r\n};\r\n\r\nexport { Section  };","const Notification = ({ message }) => {\r\n    return (\r\n     <p>{message}</p>\r\n    ) \r\n};\r\n\r\nexport { Notification  };","import { Component } from \"react\"\nimport { FeedbackOptions } from \"./components/Feedback/FeedbackOptions\"\nimport { Statistics } from \"./components/Feedback/Statistics\"\nimport { Section } from \"./components/Feedback/Section\"\nimport { Notification } from \"./components/Feedback/Notification\"\n\n\nclass App extends Component {\n  \n  state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    }\n  \n  countTotalFeedback = () => {\n    const totalFeedback = Object.values(this.state).reduce((acc, value) => acc + value, 0);\n    return totalFeedback\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage = Math.round(this.state.good * 100 / this.countTotalFeedback()) || 0;\n    return positiveFeedbackPercentage;\n  }\n\n  onLeaveFeedback = label => {\n    this.setState(prevState => {\n      return {[label]: prevState[label] + 1}\n     })\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    \n    return (\n    <>\n      <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n      </Section>\n        \n        <Section title=\"Statistics\">\n          {this.countTotalFeedback()\n            ? (<Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()} />)\n            \n            : (<Notification message=\"There is no feedback\"></Notification>)\n          }\n          \n      </Section>\n    </>\n  );\n  }\n}\n\nexport { App };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}